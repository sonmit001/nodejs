<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<context:component-scan base-package="site.book.*" />
	<context:annotation-config />
	<mvc:annotation-driven />
	<!--
		web.xml에서 url-pattern을 /로 바꿔서 *.do 뿐만 아니라 image, js 파일까지 다 받게 되어서 에러가 나기 때문에
		그런 것은  default-servlet이 받도록 설정하는 코드
	-->
	<mvc:default-servlet-handler/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- Tiles 설정 (Bean 객체 생성 주입) -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/spring/appServlet/tiles.xml</value>
			</list>
		</property>
	</bean>

	<bean id="urlBasedViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>
	<!-- Tiles 설정 END -->
	
	<!-- jsonview -->
	<bean name="jsonview" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	<!-- Transaction -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="driverManagerDataSource" /> 
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 빈 객체의 @Async, @Scheduled 활성화 -->
	<task:annotation-driven executor="executor" scheduler="scheduler"/>
	<task:scheduler id="scheduler"/>
	<task:executor id="executor" />
	
	<bean id="visitorService" class="site.book.admin.service.VisitorService" />
	
	<!-- Velocity 설정 -->
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/resources/vm/" />
		<property name="velocityProperties">
			<value>
				input.encoding=UTF-8
				output.encoding=UTF-8
			</value>
		</property>
	</bean>

	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="/resources/vm/" />
	</bean>
	
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
	  <constructor-arg value="1070288904979-nva8sh7afqq9um1era7g2eagd21ohjev.apps.googleusercontent.com" />
	  <constructor-arg value="2s_boAlqsbdSE5_nNXYUqHIx" />
	</bean>
	
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<property name="scope" value="https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.email" />
	 	<property name="redirectUri" value="http://rootmark.site/joinus/googleSignInCallback" />
	</bean>
	
</beans>
